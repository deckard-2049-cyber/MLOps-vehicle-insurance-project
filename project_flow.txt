Tools and Techniques used:- 

- MongoDB - Database
- Robust Pipeline - Training/Prediction
- FastAPI
- CI/CD - GitHub Actions
- AWS - IAM, ECR, EC2
- No conventional MLOps tools used.

Discussing System Design:-
                        |- Workflow
                        |- components
                        |- Pipeline


Workflow:-
|- constants (this contains a file where we define our all the variables)
    |- config_entity (Here we'll keep our all configuration related informations)
        |- artifact_entity (This contains all the artifacts for our data, for example train and test dataset)
            |- component (This can be any components from the below, wheather data ingestion or data validation, etc)
                |- Pipeline (This contains all the methods or functions that is being used for all the previous processes here and will be called here to create a pipeline.)
                    |- demo.py/app.py (We'll keep all the components of pipeline into this file and will run this)



Components:-
|- Data Ingestion  (Connects with the MongoDB server and fetches the data and stores into our local storage)
    |- Data Validation (Checks the columns, data types, column names, etc.)
        |- Data Transformation (Tansforms the data using techniques like One-Hot encoding)
            |- Model Training (Trains the model)
                |- Model Evaluation (Evaluate the model for better performance)
                    |- Model Pusher (Push the model to a AWS storage)


----------------------------------------------------------------------------------

1. Create project template by executing "template.py" file.
2. Write the code on "setup.py" and "pyproject.toml" file to import local packages.
>> Find more abot "setup.py" and "pyproject.toml" at crashcourse.txt
3. Create a virtual env, activate it and install the requirements from requirements.txrt
>> conda create -n proj1 python==3.10 -y
>> conda activate proj1
>> add the required modules in requirements.txt
>> pip install -r requirements.txt
4. Do a "pip list" on terminal to make sure you have local packages installed.

-----------------------------------MongoDB Setup------------------------------------

5. Sign up to MongoDB Atlas and create a new project by just providing it a name then next next create.
6. From "Create a cluster" screen, hit "create", Select M0 service keeping other services as default, hit "create deployment"
7. Setup the username and password and then create DB user.
8. Go to "network access" and add ip address - "0.0.0.0/0" so that we can access it from anywhere
9. Go back to project >> "Get Connection String" >> "Drivers" >> {Driver:Python, Version:3.6 or later} 
   >> copy and save the connection string with you(replace password). >> Done.
10. Create folder "notebook" >> do step 11 >>  create file "mongoDB_demo.ipynb" >> select kernal>python kernal>vehicle>>
11. Dataset added to notebook folder
12. Push your data to mongoDB database from your python notebook.
13. Go to mongoDB Atlas >> Database >> browse collection >> see your data in key value format


